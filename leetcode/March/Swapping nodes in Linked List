# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def swapNodes(self, head: ListNode, k: int) -> ListNode:
        lol=wow=ListNode(0)
        temp=head
        count=1
        lens=0
        while head is not None:
            lens+=1
            head=head.next
        cb=lens
        c=0
        d=0
        head=temp
        while head is not None:
            if count==k:
                c=head.val
            if cb==k:
                d=head.val
            head=head.next
            count+=1
            cb-=1
        cb=lens
        count=1
        head=temp
        while head is not None:
            if count==k:
                wow.next=ListNode(d)
                wow=wow.next
            elif cb==k:
                wow.next=ListNode(c)
                wow=wow.next
            else:
                wow.next=ListNode(head.val)
                wow=wow.next
            head=head.next
            count+=1
            cb-=1
        return lol.next
                
