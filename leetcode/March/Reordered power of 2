class Solution:
    import math
	#1st solution(best solution)
    def reorderedPowerOf2(self, N: int) -> bool:
        res = sorted([int(x) for x in str(N)])
        for i in range(30):                                             #since 1 <= N <= 10^9 we only need to
            d=sorted([int(x) for x in str(1 << i)])            #check for powers ranging between [0,29].
            if d == res: 
                return True
        return False
    
	#2nd solution
    def reorderedPowerOf2(self, N: int) -> bool
        lis=permutations(str(N))
        strs=""
        for i in lis:
            strs="".join(i)
            c=log(int(strs))/log(2)
        
            if 2**int(c)==int(strs) and len(str(2**int(c))) == len(strs):
                return True
        return False

