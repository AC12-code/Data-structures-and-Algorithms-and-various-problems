class Solution:
    def powerfulIntegers(self, x: int, y: int, bound: int) -> List[int]:
        c, d = 0, 0
        tot = 0
        lis = []
        if bound == 0:
            return []
        if x==1 and y==1 and bound > 1: 
            return [2]
        if x==1 and y==1 and bound <= 1: 
            return []
        if x==1 or y==1:
            while True:
                tot=x**c+y**d
                if tot<=bound:
                    lis.append(tot)
                    c+=1
                    d+=1
                else:
                    return lis
        
        while True:
            tot = x ** c + y ** d
            if tot <= bound and tot not in lis:
                lis.append(tot)
                d += 1
            elif (x ** c + y ** 0) > bound:
                break
            elif tot <= bound and tot in lis:
                d += 1
            else:
                c += 1
                d = 0

        return lis
