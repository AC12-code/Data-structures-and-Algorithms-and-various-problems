class NestedIterator:
    def __init__(self, nestedList: [NestedInteger]):
        self.nestedList=nestedList
        self.stack = []
        self.c=0
        self.flatten(nestedList)
        
        
    def flatten(self,lis):
        for i in lis:
            if i.isInteger():
                self.stack.append(i.getInteger())
            else:
                self.flatten(i.getList())
        
    def next(self) -> int:
        t=self.stack[self.c] 
        self.c+=1
        return t

    def hasNext(self) -> bool:
        if self.c<len(self.stack):
            return True
        return False
