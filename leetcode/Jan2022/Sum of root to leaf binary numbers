# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sumRootToLeaf(self, root: Optional[TreeNode]) -> int:
        def dfs(root,val):
            if not root: return 0  #base case
            val = val * 2 + root.val  #val = val << 1 | root->val; //Both are same it's just the bit manipulation way  
            if root.left == root.right: return val 
            return dfs(root.left, val) + dfs(root.right, val) #dfs call
        return dfs(root,0)
        
        
        #ref-coding decoded
