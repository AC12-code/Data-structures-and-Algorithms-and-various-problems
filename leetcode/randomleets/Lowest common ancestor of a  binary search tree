# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        parent={root:None}
        res=[root]
        temp=[]
        while p not in parent or q not in parent:
            for i in res:
                if i.left:
                    parent[i.left]=i
                    temp.append(i.left)
                if i.right:
                    parent[i.right]=i
                    temp.append(i.right)
            res=temp
            temp=[]
        
        ance=set()
        while p:
            ance.add(p)
            p=parent[p]
        while q not in ance:
            q=parent[q]
        
        return q
            
