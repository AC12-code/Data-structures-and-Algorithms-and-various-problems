# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sumNumbers(self, root: Optional[TreeNode]) -> int:
        # Sol 1:
        def dfs(root,strs):
            if root:      
                strs+=str(root.val)
                if not root.left and not root.right:
                    ans.append(int(strs))
                    return
                dfs(root.left,strs)
                dfs(root.right,strs)
            return
         ans=[]
         dfs(root,"")
         return sum(ans)
        
        # Sol 2:
        def dfs(root,curr):
            nonlocal ans
            if root:      
                curr=curr*10+root.val
                if not root.left and not root.right:
                    ans+=curr
                    return
                dfs(root.left,curr)
                dfs(root.right,curr)
            return
        ans=0
        dfs(root,0)
        return ans
