# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:

    #1-Illegal solution:

        keys=defaultdict(int)
        temp=head
        n=0
        while temp:
            temp=temp.next
            n+=1
        n-=1
        res=0
        c=0
        while head:
            keys[c]=head.val
            res=max(res,head.val+keys[n-c])
            head=head.next
            c+=1
        return res

# 2-Legal solution:

        res=0
        fast,slow=head,head
        while fast and fast.next:
            slow=slow.next
            fast=fast.next.next
        prev,curr=None,slow
        while curr:
            curr.next,prev,curr=prev,curr,curr.next
        while prev:
            res=max(res,head.val+prev.val)
            head=head.next
            prev=prev.next
        return res



        
