# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:return
        s,f,cycle=head,head,0
        while f and f.next:
            if not f:return 
            s=s.next
            f=f.next.next
            if s==f:
                cycle=1
                break
        if not cycle:return
        while head!=s:
            head=head.next
            s=s.next
        return head
