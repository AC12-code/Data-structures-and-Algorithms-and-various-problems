class Solution:
    def getLengthOfOptimalCompression(self, s: str, k: int) -> int:
        @lru_cache(None)
        def counter(start,last,last_count,left):
            if left<0:
                return float("inf")
            if start>=len(s):
                return 0
            if s[start]==last:
                if last_count==1 or last_count==9 or last_count==99:
                    incr=1
                else:
                    incr=0
                return incr+counter(start+1,last,last_count+1,left)
            else:
                keep_count=1+counter(start+1,s[start],1,left)
                
                del_count=counter(start+1,last,last_count,left-1)
            return min(keep_count,del_count)
        
        return counter(0,"",0,k)
