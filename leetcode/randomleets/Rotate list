# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head:
            return
        count=0
        temp=head
        while temp.next:
            count+=1
            temp=temp.next
        count+=1
        k=k%count
        temp.next=head
        temp=head
        d=0
        while d<(count-k-1):
            # print(limit)
            temp=temp.next
            d+=1
        ans=temp.next
        temp.next=None
        return ans
        
        
