class Solution:
    def nearestExit(self, maze: List[List[str]], entrance: List[int]) -> int:
        store=deque([[entrance[0],entrance[1],0]])
        directions= [[0,1],[1,0],[0,-1],[-1,0]]
        maze[entrance[0]][entrance[1]]="+"
        while store:
            r,c,step=store.popleft()
            if (0 in [r,c] or r==len(maze)-1 or c==len(maze[0])-1) and [r,c]!=entrance:
                return step
            
            for i,j in directions:
                x,y=r+i,c+j
                if 0<=x<=(len(maze)-1) and 0<=y<=(len(maze[0])-1) and maze[x][y]==".":
                    maze[x][y]="+"
                    store.append([x,y,step+1])
        return -1
