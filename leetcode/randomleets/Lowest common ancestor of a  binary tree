# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        stack=[root]
        parent={root:None}
        while p not in parent or q not in parent:
            c=stack.pop()
            if c.left:
                parent[c.left]=c
                stack.append(c.left)
            if c.right:
                parent[c.right]=c
                stack.append(c.right)
        ance=set()
        print(parent)
        while p:
            ance.add(p)
            p=parent[p]
        # print(ance)
        
        while q not in ance:
            q=parent[q]
        return q
            
                
            
                    
                    
            
