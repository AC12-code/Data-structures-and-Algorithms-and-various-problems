#ref-https://leetcode.com/problems/game-of-life/discuss/174179/python-100-with-explanation


class Solution:
    def gameOfLife(self, board: List[List[int]]) -> None:
        """
        Do not return anything, modify board in-place instead.
        """
        
        def search(r, col, cell):
            directions = [(r + 1, col), (r - 1, col), (r, col + 1), (r, col - 1), (r + 1, col + 1), (r + 1, col - 1),
                          (r - 1, col + 1), (r - 1, col - 1)]
            count = 0

            for c, d in directions:
                if c < len(board) and d < len(board[0]) and c >= 0 and d >= 0:

                    if board[c][d] > 0:
                        count += 1

            return count


        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j]==0:
                    board[i][j]=-search(i, j, board[i][j])
                else:
                    board[i][j] = search(i, j, board[i][j])+1
        for f in range(len(board)):
            for z in range(len(board[0])):
                if board[f][z] in {3,4,-3}:
                    board[f][z]=1
                else:
                    board[f][z]=0

        return board
