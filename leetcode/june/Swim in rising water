class Solution:
    def swimInWater(self, grid: List[List[int]]) -> int:
        if not grid:
            return
        N,heap,visited,res=len(grid),[(grid[0][0],0,0)],set([(0,0)]),0
        for i in range(N*N):
            val,x,y=heapq.heappop(heap)
            res=max(res,val)
            if x==N-1 and y==N-1:
                return res
            directions=[[0,1],[0,-1],[1,0],[-1,0]]
            for dx,dy in directions:
                if (x+dx,y+dy) not in visited and 0<=x+dx<N and 0<=y+dy<N:
                    heapq.heappush(heap,(grid[x+dx][y+dy],x+dx,y+dy))
                    visited.add((x+dx,y+dy))
