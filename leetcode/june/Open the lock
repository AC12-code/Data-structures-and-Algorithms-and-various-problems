class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        deads=set(deadends)
        queue=deque([('0000',0)])
        visited=set('0000')
        while queue:
            (strings,steps)=queue.popleft()
            if strings==target:
                return steps
            if strings in deads:
                continue
            for i in range(4):
                digit=int(strings[i])
                for move in [-1,1]:
                    new_digit=(digit+move) % 10
                    new_str=strings[:i]+str(new_digit)+strings[i+1:]
                    if new_str not in visited:
                        visited.add(new_str)
                        queue.append((new_str,steps+1))
        return -1
